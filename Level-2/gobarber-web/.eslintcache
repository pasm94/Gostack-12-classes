[{"C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\pages\\SignIn\\index.tsx":"1","C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\pages\\SignIn\\styles.ts":"2","C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\App.tsx":"3","C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\services\\api.ts":"4","C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\hooks\\auth.tsx":"5","C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\components\\Tooltip\\styles.ts":"6","C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\hooks\\toast.tsx":"7","C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\components\\Tooltip\\index.tsx":"8","C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\hooks\\index.tsx":"9","C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\components\\ToastContainer\\styles.ts":"10","C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\components\\ToastContainer\\index.tsx":"11","C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\components\\ToastContainer\\Toast\\styles.ts":"12","C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\components\\ToastContainer\\Toast\\index.tsx":"13","C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\reportWebVitals.ts":"14","C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\components\\Button\\styles.ts":"15","C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\routes\\index.tsx":"16","C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\pages\\SignUp\\styles.ts":"17","C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\components\\Input\\styles.ts":"18","C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\pages\\SignUp\\index.tsx":"19","C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\pages\\Dashboard\\index.tsx":"20","C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\routes\\Route.tsx":"21"},{"size":2853,"mtime":1608695708230,"results":"22","hashOfConfig":"23"},{"size":2031,"mtime":1608690717405,"results":"24","hashOfConfig":"23"},{"size":439,"mtime":1608689794511,"results":"25","hashOfConfig":"23"},{"size":111,"mtime":1608000033000,"results":"26","hashOfConfig":"23"},{"size":1873,"mtime":1608515823456,"results":"27","hashOfConfig":"23"},{"size":742,"mtime":1608000033000,"results":"28","hashOfConfig":"23"},{"size":1490,"mtime":1608605415583,"results":"29","hashOfConfig":"23"},{"size":368,"mtime":1608000033000,"results":"30","hashOfConfig":"23"},{"size":291,"mtime":1608602629274,"results":"31","hashOfConfig":"23"},{"size":169,"mtime":1608603221295,"results":"32","hashOfConfig":"23"},{"size":1117,"mtime":1608686310258,"results":"33","hashOfConfig":"23"},{"size":1306,"mtime":1608686187728,"results":"34","hashOfConfig":"23"},{"size":1304,"mtime":1608686082417,"results":"35","hashOfConfig":"23"},{"size":425,"mtime":1608000033000,"results":"36","hashOfConfig":"23"},{"size":379,"mtime":1608000033000,"results":"37","hashOfConfig":"23"},{"size":456,"mtime":1608692878002,"results":"38","hashOfConfig":"23"},{"size":2032,"mtime":1608690870234,"results":"39","hashOfConfig":"23"},{"size":1152,"mtime":1608000033000,"results":"40","hashOfConfig":"23"},{"size":3046,"mtime":1608695532850,"results":"41","hashOfConfig":"23"},{"size":109,"mtime":1608692777102,"results":"42","hashOfConfig":"23"},{"size":1055,"mtime":1608694999150,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n3m6v3",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\pages\\SignIn\\index.tsx",[],"C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\pages\\SignIn\\styles.ts",[],"C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\App.tsx",[],"C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\services\\api.ts",[],[],"C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\hooks\\auth.tsx",["91"],"import React, { createContext, useCallback, useState, useContext } from 'react'\n\nimport api from '../services/api'\n// criamos o contexto para pegar informações de outro lugar da aplicacao\n\n\ninterface AuthState {\n  token: string;\n  user: object;\n}\n\ninterface SignInCredentials {\n  email: string;\n  password: string;\n}\n\ninterface AuthContextData {\n  user: object;\n  signIn(credentials: SignInCredentials): Promise<void>;\n  signOut(): void;\n}\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData)\n\n\nexport const AuthProvider: React.FC = ({ children }) => {\n  // tudo que esse componente receber como child, repassaremos em algum lugar aqui dentro\n\n  const [data, setData] = useState<AuthState>(() => {\n    const token = localStorage.getItem('@GoBarber:token')\n    const user = localStorage.getItem('@GoBarber:user')\n\n    if (token && user) {\n      return { token, user: JSON.parse(user) }\n    }\n\n    return {} as AuthState\n  })\n\n  const signIn = useCallback(async ({ email, password }) => {\n    const response = await api.post('sessions', {\n      email,\n      password,\n    })\n\n    const { token, user } = response.data\n\n    localStorage.setItem('@GoBarber:token', token)\n    localStorage.setItem('@GoBarber:user', JSON.stringify(user))\n\n    setData({ token, user })\n  }, [])\n\n  const signOut = useCallback(() => {\n    localStorage.removeItem('@GoBarber:token')\n    localStorage.removeItem('@GoBarber:user')\n\n    setData({} as AuthState)\n  }, [])\n\n  return (\n    <AuthContext.Provider value={{ user: data.user, signIn, signOut }}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport function useAuth(): AuthContextData {\n  const context = useContext(AuthContext)\n\n  if (!context) { // se o user utilizar useAuth sem o AuthProvider por volta, dispara erro\n    throw new Error('useAuth must be user within an AuthProvider')\n  }\n\n  return context\n}\n","C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\components\\Tooltip\\styles.ts",[],"C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\hooks\\toast.tsx",["92"],"import React, { createContext, useContext, useCallback, useState } from 'react'\r\nimport { uuid } from 'uuidv4'\r\nimport ToastContainer from '../components/ToastContainer'\r\n\r\nexport interface ToastMessage {\r\n  id: string;\r\n  type?: 'success' | 'error' | 'info';\r\n  title: string;\r\n  description?: string;\r\n}\r\n\r\ninterface ToastContextData {\r\n  addToast(message: Omit<ToastMessage, 'id'>): void;\r\n  removeToast(id: string): void;\r\n}\r\n\r\nconst ToastContext = createContext<ToastContextData>({} as ToastContextData)\r\n\r\nconst ToastProvider: React.FC = ({ children }) => {\r\n  const [messages, setMessages] = useState<ToastMessage[]>([])\r\n\r\n  const addToast = useCallback(({ type, title, description }: Omit<ToastMessage, 'id'>) => { // tipagem eh toda interface, exceto o id\r\n    const id = uuid()\r\n\r\n    const toast = {\r\n      id,\r\n      type,\r\n      title,\r\n      description,\r\n    }\r\n\r\n    setMessages(state => [...state, toast])\r\n  }, [])\r\n\r\n  const removeToast = useCallback((id: string) => {\r\n    setMessages(state => state.filter(message => message.id !== id))\r\n  }, [])\r\n\r\n  return (\r\n    <ToastContext.Provider value={{ addToast, removeToast }}>\r\n      {children}\r\n      <ToastContainer messages={messages} />\r\n    </ToastContext.Provider>\r\n  )\r\n}\r\n\r\nfunction useToast(): ToastContextData {\r\n  const context = useContext(ToastContext)\r\n\r\n  if (!context) {\r\n    throw new Error('useToast must be used within a ToastProvider')\r\n  }\r\n\r\n  return context\r\n}\r\n\r\nexport { ToastProvider, useToast }",[],"C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\components\\Tooltip\\index.tsx",[],"C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\hooks\\index.tsx",[],"C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\components\\ToastContainer\\styles.ts",[],"C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\components\\ToastContainer\\index.tsx",[],[],"C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\components\\ToastContainer\\Toast\\styles.ts",[],"C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\components\\ToastContainer\\Toast\\index.tsx",[],"C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\reportWebVitals.ts",[],"C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\components\\Button\\styles.ts",[],"C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\routes\\index.tsx",[],"C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\pages\\SignUp\\styles.ts",[],"C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\components\\Input\\styles.ts",[],"C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\pages\\SignUp\\index.tsx",[],"C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\pages\\Dashboard\\index.tsx",[],"C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\routes\\Route.tsx",[],{"ruleId":null,"fatal":true,"severity":2,"message":"93","line":23,"column":55},{"ruleId":null,"fatal":true,"severity":2,"message":"94","line":17,"column":57},"Parsing error: Unexpected token, expected \",\"\n\n  21 | }\n  22 | \n> 23 | const AuthContext = createContext<AuthContextData>({} as AuthContextData)\n     |                                                       ^\n  24 | \n  25 | \n  26 | export const AuthProvider: React.FC = ({ children }) => {","Parsing error: Unexpected token, expected \",\"\n\n  15 | }\n  16 | \n> 17 | const ToastContext = createContext<ToastContextData>({} as ToastContextData)\n     |                                                         ^\n  18 | \n  19 | const ToastProvider: React.FC = ({ children }) => {\n  20 |   const [messages, setMessages] = useState<ToastMessage[]>([])"]