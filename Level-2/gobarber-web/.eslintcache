[{"C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\pages\\SignIn\\index.tsx":"1","C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\pages\\SignIn\\styles.ts":"2","C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\App.tsx":"3","C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\services\\api.ts":"4","C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\hooks\\auth.tsx":"5","C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\components\\Tooltip\\styles.ts":"6","C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\hooks\\toast.tsx":"7","C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\components\\Tooltip\\index.tsx":"8","C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\hooks\\index.tsx":"9"},{"size":2481,"mtime":1608517350605,"results":"10","hashOfConfig":"11"},{"size":1654,"mtime":1608000033000,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1608517119676,"results":"13","hashOfConfig":"11"},{"size":111,"mtime":1608000033000,"results":"14","hashOfConfig":"11"},{"size":1873,"mtime":1608515823456,"results":"15","hashOfConfig":"11"},{"size":742,"mtime":1608000033000,"results":"16","hashOfConfig":"11"},{"size":846,"mtime":1608517116408,"results":"17","hashOfConfig":"11"},{"size":368,"mtime":1608000033000,"results":"18","hashOfConfig":"11"},{"size":291,"mtime":1608516083701,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n3m6v3",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\pages\\SignIn\\index.tsx",[],"C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\pages\\SignIn\\styles.ts",[],"C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\App.tsx",[],"C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\services\\api.ts",[],[],"C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\hooks\\auth.tsx",["40"],"import React, { createContext, useCallback, useState, useContext } from 'react'\n\nimport api from '../services/api'\n// criamos o contexto para pegar informações de outro lugar da aplicacao\n\n\ninterface AuthState {\n  token: string;\n  user: object;\n}\n\ninterface SignInCredentials {\n  email: string;\n  password: string;\n}\n\ninterface AuthContextData {\n  user: object;\n  signIn(credentials: SignInCredentials): Promise<void>;\n  signOut(): void;\n}\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData)\n\n\nexport const AuthProvider: React.FC = ({ children }) => {\n  // tudo que esse componente receber como child, repassaremos em algum lugar aqui dentro\n\n  const [data, setData] = useState<AuthState>(() => {\n    const token = localStorage.getItem('@GoBarber:token')\n    const user = localStorage.getItem('@GoBarber:user')\n\n    if (token && user) {\n      return { token, user: JSON.parse(user) }\n    }\n\n    return {} as AuthState\n  })\n\n  const signIn = useCallback(async ({ email, password }) => {\n    const response = await api.post('sessions', {\n      email,\n      password,\n    })\n\n    const { token, user } = response.data\n\n    localStorage.setItem('@GoBarber:token', token)\n    localStorage.setItem('@GoBarber:user', JSON.stringify(user))\n\n    setData({ token, user })\n  }, [])\n\n  const signOut = useCallback(() => {\n    localStorage.removeItem('@GoBarber:token')\n    localStorage.removeItem('@GoBarber:user')\n\n    setData({} as AuthState)\n  }, [])\n\n  return (\n    <AuthContext.Provider value={{ user: data.user, signIn, signOut }}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport function useAuth(): AuthContextData {\n  const context = useContext(AuthContext)\n\n  if (!context) { // se o user utilizar useAuth sem o AuthProvider por volta, dispara erro\n    throw new Error('useAuth must be user within an AuthProvider')\n  }\n\n  return context\n}\n","C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\components\\Tooltip\\styles.ts",[],"C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\hooks\\toast.tsx",["41"],"C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\components\\Tooltip\\index.tsx",[],"C:\\Users\\paulo\\Gostack-12-classes\\Level-2\\gobarber-web\\src\\hooks\\index.tsx",[],{"ruleId":null,"fatal":true,"severity":2,"message":"42","line":23,"column":55},{"ruleId":null,"fatal":true,"severity":2,"message":"43","line":10,"column":57},"Parsing error: Unexpected token, expected \",\"\n\n  21 | }\n  22 | \n> 23 | const AuthContext = createContext<AuthContextData>({} as AuthContextData)\n     |                                                       ^\n  24 | \n  25 | \n  26 | export const AuthProvider: React.FC = ({ children }) => {","Parsing error: Unexpected token, expected \",\"\n\n   8 | }\n   9 | \n> 10 | const ToastContext = createContext<ToastContextData>({} as ToastContextData)\n     |                                                         ^\n  11 | \n  12 | const ToastProvider: React.FC = ({ children }) => {\n  13 |   const addToast = useCallback(() => { }, [])"]